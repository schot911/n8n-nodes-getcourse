"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createTemplate = void 0;
const fs = __importStar(require("fs"));
const replace_in_file_1 = require("replace-in-file");
const { promisify } = require('util');
const fsCopyFile = promisify(fs.copyFile);
async function createTemplate(sourceFilePath, destinationFilePath, replaceValues) {
    await fsCopyFile(sourceFilePath, destinationFilePath);
    const options = {
        files: [
            destinationFilePath
        ],
        from: [],
        to: [],
    };
    options.from = Object.keys(replaceValues).map((key) => {
        return new RegExp(key, 'g');
    });
    options.to = Object.values(replaceValues);
    await replace_in_file_1.replaceInFile(options);
}
exports.createTemplate = createTemplate;
//# sourceMappingURL=Create.js.map